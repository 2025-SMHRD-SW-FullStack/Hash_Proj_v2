services:
  frontend:
    build:
      context: ./front-server
      dockerfile: Dockerfile
    environment:
      - VITE_HOST=0.0.0.0
      - CHOKIDAR_USEPOLLING=true
      - VITE_KAKAO_JAVASCRIPT_KEY=${KAKAO_JAVASCRIPT_KEY}
    networks:
      - app-network

  api-server:
    build:
      context: ./api-server
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - TZ=Asia/Seoul
      - DATABASE_URL
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY
      - BUCKET_NAME
      - DB_USERNAME
      - DB_PASSWORD
      - DB_HOSTNAME
    networks:
      - app-network

  ai-server:
    build:
      context: ./ai-server
      dockerfile: Dockerfile
    ports:
      - "7777:7777"
    environment:
      - TZ=Asia/Seoul
      - DATABASE_URL
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY
      - BUCKET_NAME
      - DB_USERNAME
      - DB_PASSWORD
      - DB_HOSTNAME
      - API_KEY
      - API_SECRET
      - SERVICE_ID
      - SERVER_HOST
      - CLIENT_HOST
      - NAVER_CLIENT_ID
      - NAVER_CLIENT_SECRET
      - SECRET_KEY
    networks:
      - app-network

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      - frontend
      - backend
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
