server:
  port: ${SERVER_PORT:8080}
  forward-headers-strategy: framework

logging:
  level:
    com.meonjeo.meonjeo.chat: INFO
    org.springframework.messaging: INFO
    org.springframework.web.socket: INFO

spring:
  datasource:
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: ${SPRING_JPA_HIBERNATE_DDL_AUTO:update}
    properties:
      hibernate:
        format_sql: true
        show_sql: true
    database-platform: org.hibernate.dialect.MySQL8Dialect

  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      database: ${REDIS_DB:0}

  servlet:
    multipart:
      # 업로드 모듈 가이드: 1파일 ≤10MB, 총합 ≤30MB
      max-file-size: 12MB
      max-request-size: 40MB

  jackson:
    serialization:
      fail-on-empty-beans: false

# ===== 파일 스토리지 (PROD) =====
storage:
  mode: s3
  local:
    base-dir: ./uploads
  s3:
    bucket: ${STORAGE_S3_BUCKET}
    region: ${STORAGE_S3_REGION}
    endpoint: ${STORAGE_S3_ENDPOINT}
    path-style: ${STORAGE_S3_PATH_STYLE:true}
    public-base-url: ${STORAGE_S3_PUBLIC_BASE_URL}
    acl-public-read: ${STORAGE_S3_ACL_PUBLIC_READ:true}

phone:
  short-token:
    validity-seconds: 600
  code:
    ttl-seconds: 180
    max-attempts: 5

ai:
  base-url: http://ai-server:8000
  timeout:
    connect-ms: 1500
    read-ms: 3000

# ===== 파일 스토리지 (DEV: S3 스토리지 사용) =====
# storage:
#   mode: s3
#   local:
#     base-dir: ./uploads
#   s3:
#     bucket: meonjeo                # 콘솔 버킷명과 정확히 일치
#     region: kr-standard
#     endpoint: https://kr.object.ncloudstorage.com
#     path-style: true
#     public-base-url: https://kr.object.ncloudstorage.com/meonjeo
#     acl-public-read: true          # ← 이거 켜면 객체에만 공개 ACL 붙임
#     accessKey: ${STORAGE_S3_ACCESS_KEY}
#     secretKey: ${STORAGE_S3_SECRET_KEY}

phone:
  short-token:
    validity-seconds: 600
  code:
    ttl-seconds: 180
    max-attempts: 5

COOLSMS_API_KEY: ${COOLSMS_API_KEY}
COOLSMS_API_SECRET: ${COOLSMS_API_SECRET}
COOLSMS_FROM_NUMBER: ${COOLSMS_FROM_NUMBER}

toss:
  successUrl: http://hash-proj-v2.eba-ijnehrgn.ap-northeast-2.elasticbeanstalk.com/pay/success
  failUrl: http://hash-proj-v2.eba-ijnehrgn.ap-northeast-2.elasticbeanstalk.com/pay/fail

sweettracker:
  api-key: ${SWEETTRACKER_API_KEY}
  base-url: https://info.sweettracker.co.kr
  timeout-ms: 3000
